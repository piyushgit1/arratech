import sqlite3

from flask import Flask

from flask_restful import Resource, Api
from sqlalchemy import create_engine
from json import dumps
from flask import jsonify

connect = sqlite3.connect('test.db',check_same_thread=False)
command = "CREATE TABLE IF NOT EXISTS cart(Id INT PRIMARY KEY  ,name text NOT NULL,price int NOT NULL)"
connect.execute(command)


app = Flask(__name__)
api = Api(app)


# class TableCreation(Resource):
#     def get(self):


class ShoppingCart(Resource):
    def get(self):
        # connect to database
        query = connect.execute("select * from cart")  # This line performs query and returns json result
        return {'cart': [i[0] for i in query.fetchall()]}  # Fetches first column that is Employee ID


class CartQuantity(Resource):
    def get(self):
        # conn = db_connect.connect()  # connect to database
        query = connect.execute('SELECT COUNT(*) FROM cart')
        for row in query:
            return row[0]
        # This line performs query and returns json result
        # print(query)  # Fetches first column that is Employee ID


class PriceQuantity(Resource):
    def get(self):
        # conn = db_connect.connect()
        query = connect.execute('SELECT SUM(price) FROM cart')
        for row in query:
            return row[0]
        # print(query)


class Tracks(Resource):
    def post(self):
        from flask import request
        data = request.get_json(force=True)
        name = data['name']
        price = data['price']
        # conn = db_connect.connect()
        query = "Insert Into cart(name, price) Values(?,?)"
        connect.execute(query, [name, price])
        connect.commit()
        return "successfully created"


class Employees_Name(Resource):
    def get(self, employee_id):
        query = connect.execute("select * from employees where EmployeeId =%d " % int(employee_id))
        result = {'data': [dict(zip(tuple(query.keys()), i)) for i in query.cursor]}
        return jsonify(result)


api.add_resource(ShoppingCart, '/data/')  # Route_1
# api.add_resource(Tab, '/datas')  # Route_1
api.add_resource(CartQuantity, '/quant/')
api.add_resource(PriceQuantity, '/price/')
api.add_resource(Tracks, '/tracks/')  # Route_2
api.add_resource(Employees_Name, '/employees/<employee_id>')  # Route_3

if __name__ == '__main__':
    app.run(port='5002')
